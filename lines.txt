#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
using namespace std;

struct Equation {
    double a = 0;  // Коэффициент при x
    double b = 0;  // Коэффициент при y
    double c = 0;  // Свободный член (перенесенный из левой части)
};

Equation parseequation(string line) {
    Equation eq;
    int rav_pos = line.find("=");
    if (rav_pos == -1) return eq;

    // Поскольку справа всегда 0, можем пропустить stod для правой части
    // eq.c изначально 0, и мы будем только вычитать из него константы из левой части

    string term = "";
    char sigh = '+';

    for (int i = 0; i <= rav_pos; i++) {
        char c = line[i];

        if (c == '+' || c == '-' || i == rav_pos) {
            if (!term.empty()) {
                char last_char = term.back();

                // Обработка переменных (x/y)
                if (last_char == 'x' || last_char == 'y') {
                    string coef_str = term.substr(0, term.size() - 1);
                    double coef_value;

                    // Обработка случаев: x, -x, +y и т.д.
                    if (coef_str.empty() || coef_str == "+" || coef_str == "-") {
                        coef_value = 1.0;
                    }
                    else {
                        coef_value = stod(coef_str);
                    }

                    if (sigh == '-') {
                        coef_value = -coef_value;
                    }

                    if (last_char == 'x') {
                        eq.a += coef_value;
                    }
                    else {
                        eq.b += coef_value;
                    }
                }
                // Обработка числовых констант
                else {
                    double const_value = stod(term);
                    if (sigh == '-') {
                        const_value = -const_value;
                    }
                    // Переносим константу в правую часть с противоположным знаком
                    eq.c -= const_value;
                }
                term = "";
            }
            if (i != rav_pos) {
                sigh = c;  // Обновляем знак для следующего члена
            }
        }
        else {
            term += c;
        }
    }
    return eq;
}

int main() {
    ifstream file("uslov.txt");
    if (!file) {
        cerr << "File error!" << endl;
        return 1;
    }

    string line1, line2;
    getline(file, line1);
    getline(file, line2);

    Equation eq1 = parseequation(line1);
    Equation eq2 = parseequation(line2);

    // Вычисляем определители для метода Крамера
    double D = eq1.a * eq2.b - eq2.a * eq1.b;   // Главный определитель
    double Dx = eq1.c * eq2.b - eq1.b * eq2.c;  // Определитель для x
    double Dy = eq1.a * eq2.c - eq2.a * eq1.c;  // Определитель для y

    const double eps = 1e-6;  // Погрешность для сравнения с нулем

    if (abs(D) > eps) {
        double x = Dx / D;
        double y = Dy / D;
        cout << "Solution:\nx = " << x << "\ny = " << y << endl;
    }
    else if (abs(Dx) < eps && abs(Dy) < eps) {
        cout << "Infinitely many solutions" << endl;
    }
    else {
        cout << "No solution" << endl;
    }

    return 0;
}